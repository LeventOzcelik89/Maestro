// <auto-generated />
using System;
using Maestro.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Maestro.Persistence.Migrations
{
    [DbContext(typeof(MaestroContext))]
    [Migration("20230303070206_M1")]
    partial class M1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Maestro.Domain.Entities.SH_User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("ChangedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SH_User");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Maestro.Domain.Entities.UT_City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("ChangedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("UT_City");
                });

            modelBuilder.Entity("Maestro.Domain.Entities.UT_Town", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newsequentialid())");

                    b.Property<DateTime?>("Changed")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(2);

                    b.Property<Guid?>("ChangedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("DATETIME")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("UT_Town");
                });

            modelBuilder.Entity("Maestro.Domain.Entities.UT_Town", b =>
                {
                    b.HasOne("Maestro.Domain.Entities.UT_City", "UT_City")
                        .WithMany("UT_Towns")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UT_City");
                });

            modelBuilder.Entity("Maestro.Domain.Entities.UT_City", b =>
                {
                    b.Navigation("UT_Towns");
                });
#pragma warning restore 612, 618
        }
    }
}
